name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      PREVIOUS_TAG: ${{ steps.get-latest-tag.outputs.tag }}
      LATEST_TAG: ${{ steps.bump-semver.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor

      - uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "${{ steps.bump-semver.outputs.new_version }}: PR #${{ steps.get-merged-pull-request.outputs.number }} ${{ steps.get-merged-pull-request.outputs.title }}"


      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: eostribe/fio_oracle:${{ steps.bump-semver.outputs.new_version }}
  deployment:
    runs-on: ubuntu-latest
    environment: dev
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: deploy
        shell: bash
        env:
          CA_PEM: ${{ secrets.CA_PEM }}
          CERT_PEM: ${{ secrets.CERT_PEM }}
          KEY_PEM: ${{ secrets.KEY_PEM }}
          MODE: ${{ secrets.mode }}
          SERVER_URL_HISTORY: ${{ secrets.SERVER_URL_HISTORY }}
          SERVER_URL_ACTION: ${{ secrets.SERVER_URL_ACTION }}
          POLLTIME: ${{ secrets.POLLTIME }}
          POLLOFFSET: ${{ secrets.POLLOFFSET }}
          TGASLIMIT: ${{ secrets.TGASLIMIT }}
          TGASPRICE: ${{ secrets.TGASPRICE }}
          PGASLIMIT: ${{ secrets.PGASLIMIT }}
          PGASPRICE: ${{ secrets.PGASPRICE }}
          ETHAPIURL: ${{ secrets.ETHAPIURL }}
          USEGASAPI: ${{ secrets.USEGASAPI }}
          GASPRICELEVEL: ${{ secrets.GASPRICELEVEL }}
          FIO_ORACLE_PRIVATE_KEY: ${{ secrets.FIO_ORACLE_PRIVATE_KEY }}
          FIO_ORACLE_PUBLIC_KEY: ${{ secrets.FIO_ORACLE_PUBLIC_KEY }}
          FIO_ORACLE_ACCOUNT: ${{ secrets.FIO_ORACLE_ACCOUNT }}
          ETH_ORACLE_PUBLIC: ${{ secrets.ETH_ORACLE_PUBLIC }}
          ETH_ORACLE_PRIVATE: ${{ secrets.ETH_ORACLE_PRIVATE }}
          FIO_ORACLE_ADDRESS: ${{ secrets.FIO_ORACLE_ADDRESS }}
          FIO_ORACLE_WRAP_ACCOUNT: ${{ secrets.FIO_ORACLE_WRAP_ACCOUNT }}
          POLYAPIURL: ${{ secrets.POLYAPIURL }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
          TAG: ${{ needs.build.outputs.LATEST_TAG }}
        run: |
          echo -e "$CA_PEM" > ~/.docker/ca.pem
          echo -e "$CERT_PEM" > ~/.docker/cert.pem
          echo -e "$KEY_PEM" > ~/.docker/key.pem
          echo -e "$ENV_FILE" > ~/.env
          docker-compose --tlsverify --env-file=.env -H=api.eostribe.io:2376 up -d
       

          
          
